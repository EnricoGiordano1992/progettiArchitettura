.section .data

code:
	.string	"Codice errato. Inserire codice: "
	.align 4

failure_control_code:
	.string	"Failure controllo codice. Modalità safe inserita\n"
	.align 4

car:
	.long 0

codice:
	.space 64
	
codice_len:
	.long .-codice
	
.section .text

.global ins_code

.type ins_code, @function 		# Funzione per l'inserimento del codice per un massimo di 2 volte;
					# dopo tale limite la funzione esce chiamando la sys EXIT.

ins_code:
	addl $1, car			# aggiungo 1 a car siccome si ha commesso un errore
	cmpl $3, car			# confronto car con 3 che è il num max di errori ( alla quarta volta che si ritorna in car
	je ins_code_ko			# il programma salta alla fine )
	leal code, %ecx
	call _print
	
	movl $3, %eax			# chiamo la sys call READ
	xorl %ebx, %ebx
	leal codice,%ecx 
	leal codice_len, %edx	
	int $0x80
	
	cmpb $6, %al			# controllo se i parametri passati siano 6
	jne ins_code			# se falso rivado all'ins_code
	
	movl (%ecx), %eax		# controllo il primo parametro che si trova all'indirizzo contenuto in ecx
					# e lo muovo in eax
	cmpb $53, %al			# confronto con codice ascii di "5" con il registro al
	jne ins_code			# se diverso richiedo il codice
	
	movl 1(%ecx), %eax		# sommo 1 all'indirizzo contenuto in ecx e lo muovo in eax
	cmpb $32, %al			# confronto il codice ascii dello spazio con al
	jne ins_code			# se non è uguale salto a ins_code per reinserire il codice
	
	movl 2(%ecx), %eax		# sommo 2 all'indirizzo contenuto in ecx e lo muovo in eax
	cmpb $53, %al			# confronto il codice ascii di "5" con al
	jne ins_code			# se non è uguale salto a ins_code per reinserire il codice
	
	movl 3(%ecx), %eax		# sommo 3 all'indirizzo contenuto in ecx e lo muovo in eax
	cmpb $32, %al			# confronto il codice ascii dello spazio con al
	jne ins_code			# se non è uguale salto a ins_code per reinserire il codice
	
	movl 4(%ecx), %eax		# sommo 4 all'indirizzo contenuto in ecx e lo muovo in eax
	cmpb $50, %al			# confronto il codice ascii di "2" con al
	jne ins_code			# se non è uguale salto a ins_code per reinserire il codice
	
	movl 5(%ecx), %eax		# sommo 5 all'indirizzo contenuto in ecx e lo muovo in eax
	cmpb $10, %al			# confronto il codice ascii del New Line con al
	jne ins_code			# se non è uguale salto a ins_code per reinserire il codice
	ret

ins_code_ko:	
	leal failure_control_code, %ecx	# muovo l'indirizzo della variabile nel registro ecx
	call _print			# chiamo la funzione _print per la stampa a video

	movl $1, %eax			# chiamo la sys call EXIT
	xorl %ebx, %ebx			# 
	int $0x80			# 

